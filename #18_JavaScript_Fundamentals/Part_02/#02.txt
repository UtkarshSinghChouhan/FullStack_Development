perators in JavaScript can be categorized based on their functionality into 
several groups. 

Here are the main categories of operators in JavaScript, along with 
examples for each category:


Arithmetic Operators:

These operators perform mathematical operations on numeric values.

let a = 10;
let b = 5;
let addition = a + b;      // Addition
let subtraction = a - b;   // Subtraction
let multiplication = a * b; // Multiplication
let division = a / b;      // Division
let modulus = a % b;       // Modulus (remainder after division)
let increment = a++;       // Increment by 1
let decrement = b--;       // Decrement by 1


Comparison Operators:

These operators compare two values and return a boolean result (true or false).

let x = 10;
let y = 5;
let isEqual = x === y;  // Equal to
let isNotEqual = x !== y;  // Not equal to
let isGreaterThan = x > y;  // Greater than
let isLessThan = x < y;  // Less than
let isGreaterOrEqual = x >= y;  // Greater than or equal to
let isLessOrEqual = x <= y;  // Less than or equal to


Logical Operators:

These operators are used to perform logical operations on boolean values.

let isTrue = true;
let isFalse = false;
let andResult = isTrue && isFalse;  // Logical AND
let orResult = isTrue || isFalse;   // Logical OR
let notResult = !isTrue;            // Logical NOT


Assignment Operators:

These operators are used to assign values to variables.

let a = 10;
a += 5;  // Addition and assignment (a = a + 5)
a -= 3;  // Subtraction and assignment (a = a - 3)
a *= 2;  // Multiplication and assignment (a = a * 2)
a /= 4;  // Division and assignment (a = a / 4)


Bitwise Operators:

These operators perform bitwise operations on integer values.

let num1 = 5;   // Binary: 0101
let num2 = 3;   // Binary: 0011
let bitwiseAnd = num1 & num2;   // Bitwise AND
let bitwiseOr = num1 | num2;     // Bitwise OR
let bitwiseXor = num1 ^ num2;    // Bitwise XOR
let bitwiseNot = ~num1;          // Bitwise NOT
let leftShift = num1 << 2;       // Left shift by 2 bits
let rightShift = num1 >> 1;      // Right shift by 1 bit


Conditional (Ternary) Operator:

The conditional operator is a shorthand way to express conditional statements.

let age = 20;
let canVote = age >= 18 ? "Yes" : "No"; // Ternary operator